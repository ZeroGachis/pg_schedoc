--
-- We assume that ddl_historization is installed in public schema
--

SET search_path=public,pgtap,_TEST_SCHEMA_;

BEGIN;

SELECT plan(3);

DROP EXTENSION IF EXISTS schedoc CASCADE;
CREATE EXTENSION schedoc WITH SCHEMA _TEST_SCHEMA_ CASCADE;
SELECT schedoc_start();

TRUNCATE schedoc_column_raw;
TRUNCATE ddl_history;

-- add test on schema to fail fast
SELECT has_extension('schedoc');


-- create some objects non concerned by the extension
CREATE TABLE foobar_schedoc (id int);
ALTER TABLE foobar_schedoc ADD COLUMN toto int;
CREATE INDEX ON foobar_schedoc (toto);

--

COMMENT ON COLUMN foobar_schedoc.id IS '{"status": "private"}';

--

SELECT results_eq(
    'SELECT count(*) FROM schedoc_column_raw',
    'SELECT CAST(2 as bigint)',
    'We have 2 row in schedoc_column_raw');

--
-- The comment contains unauthorized value on status key
--
CREATE OR REPLACE FUNCTION setcomm_unauthorized_value()
RETURNS void
    LANGUAGE plpgsql AS
$EOF$
BEGIN
  COMMENT ON COLUMN foobar_schedoc.id IS '{"status": "foobar"}';
END;
$EOF$;

--
--
--


COMMENT ON COLUMN foobar_schedoc.id IS 'bad comment';

COMMENT ON COLUMN foobar_schedoc.id IS '{"status": "private", "kt": "0/F8517A10"}';



SELECT results_eq(
    'SELECT count(*) FROM schedoc_column_raw WHERE comment->>''kt'' = ''0/F8517A10'' ',
    'SELECT CAST(1 as bigint)',
    'Bad comment are allowed if fixed later in the transaction');

--
-- Null comment are allowed
--
COMMENT ON COLUMN foobar_schedoc.id IS NULL;

ROLLBACK;
